<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.graduate.mapper.UserMapper">

    <resultMap id="BaseMap" type="com.example.graduate.pojo.User">
        <id property="id" column="id"/>
        <result column="bothday" property="bothDay"/>
        <result column="create_time" property="createTime"/>
        <result column="delete_flag" property="status"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="photo" property="photo"/>
    </resultMap>
    <delete id="deleteUU">
        DELETE
        FROM u_u
        <where>
            user_id = #{id} and
            <foreach collection="ids" item="pid" separator=" or ">
                friend_id =
                #{pid}
            </foreach>
        </where>
    </delete>

    <select id="getOneUserByID" resultMap="BaseMap">
        select *
        from user
        where id = #{id}
    </select>

    <select id="getFriends" resultMap="BaseMap">
        select b.id, b.nickname, b.photo
        from user AS a
                 INNER JOIN u_u ON a.id = u_u.user_id
                 INNER JOIN user AS b ON u_u.friend_id = b.id
        where a.id = #{id}
    </select>

    <select id="getSurvivalUserList" resultMap="BaseMap" parameterType="com.example.graduate.pojo.User">
        select
        id,
        account,
        nickname,
        email,
        photo,
        phone,
        bothday,
        delete_flag,
        create_time
        from user
        <where>
            <if test="account!=null">
                account =
                #{account}
            </if>
            <if test="nickname!=null">
                nickname =
                #{nickname}
            </if>
            <if test="email!=null">
                email =
                #{email}
            </if>
            <if test="phone">
                phone =
                #{phone}
            </if>
            and delete_flag = 1
        </where>
    </select>

    <insert id="installOne" parameterType="com.example.graduate.pojo.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (account, password, create_time)
        VALUES (#{account}, #{password}, #{createTime});
    </insert>
    <insert id="addUU">
        insert into u_u (user_id, friend_id)
        values (#{id}, #{fID});
        insert into u_u (friend_id, user_id)
        values (#{id}, #{fID});
    </insert>

    <select id="getLoginUser" resultMap="BaseMap">
        select *
        from user
        where account = #{account}
    </select>
    <select id="getUserByElement" resultType="com.example.graduate.pojo.User">
        SELECT user.id,
               account,
               photo
        FROM u_e
                 INNER JOIN user ON u_e.uid = user.id
        WHERE u_e.eid = #{id}
          AND user.delete_flag = 1
    </select>

    <update id="update" parameterType="com.example.graduate.pojo.User">
        UPDATE user
        <set>
            <if test="nickname!=null">
                nickname =
                #{nickname},
            </if>
            <if test="email!=null">
                email =
                #{email},
            </if>
            <if test="photo!=null">
                photo =
                #{photo},
            </if>
            <if test="phone!=null">
                phone =
                #{phone},
            </if>
            <if test="bothDay!=null">
                bothday =
                #{bothDay}
            </if>
        </set>
        WHERE id = #{id};
    </update>
    <update id="updateFlag">
        UPDATE user
        SET delete_flag = !delete_flag
        WHERE id = #{id};
    </update>
    <update id="updatePassword">
        UPDATE user
        SET password = #{priorPassword}
        WHERE id = #{id};
    </update>
</mapper>